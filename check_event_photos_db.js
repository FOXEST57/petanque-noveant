import mysql from 'mysql2/promise';
import { config } from 'dotenv';

// Charger les variables d'environnement
config();

// Configuration de la base de donn√©es
const dbConfig = {
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '3306'),
  user: process.env.DB_USER || 'root',
  password: process.env.DB_PASSWORD || '',
  database: process.env.DB_NAME || 'petanque_noveant',
};

async function checkEventPhotos() {
  let connection;
  
  try {
    console.log('üîç Connexion √† la base de donn√©es...');
    connection = await mysql.createConnection(dbConfig);
    
    // V√©rifier la structure de la table event_photos
    console.log('\nüìã Structure de la table event_photos:');
    const [structure] = await connection.execute('DESCRIBE event_photos');
    console.table(structure);
    
    // Compter le nombre total de photos
    console.log('\nüìä Nombre total de photos en base:');
    const [countResult] = await connection.execute('SELECT COUNT(*) as total FROM event_photos');
    console.log(`Total: ${countResult[0].total} photos`);
    
    // Afficher les derni√®res photos ajout√©es
    console.log('\nüì∏ Derni√®res photos ajout√©es (10 plus r√©centes):');
    const [recentPhotos] = await connection.execute(`
      SELECT id, event_id, filename, original_name, file_size, mime_type, upload_date 
      FROM event_photos 
      ORDER BY upload_date DESC 
      LIMIT 10
    `);
    console.table(recentPhotos);
    
    // V√©rifier les photos pour l'√©v√©nement 24 sp√©cifiquement
    console.log('\nüéØ Photos pour l\'√©v√©nement ID 24:');
    const [event24Photos] = await connection.execute(`
      SELECT id, filename, original_name, file_size, mime_type, upload_date 
      FROM event_photos 
      WHERE event_id = 24 
      ORDER BY upload_date DESC
    `);
    console.table(event24Photos);
    
    // V√©rifier les photos pour l'√©v√©nement 25
    console.log('\nüéØ Photos pour l\'√©v√©nement ID 25:');
    const [event25Photos] = await connection.execute(`
      SELECT id, filename, original_name, file_size, mime_type, upload_date 
      FROM event_photos 
      WHERE event_id = 25 
      ORDER BY upload_date DESC
    `);
    console.table(event25Photos);
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('\n‚úÖ Connexion ferm√©e');
    }
  }
}

checkEventPhotos();