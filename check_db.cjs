const mysql = require('mysql2/promise');
require('dotenv').config();

// Configuration de la base de donn√©es MariaDB/MySQL
const dbConfig = {
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 3306,
  user: process.env.DB_USER || 'root',
  password: process.env.DB_PASSWORD || '',
  database: process.env.DB_NAME || 'petanque_noveant'
};

console.log('üîç V√©rification de la base de donn√©es MariaDB/MySQL...');

async function checkDatabase() {
  let connection;
  
  try {
    connection = await mysql.createConnection(dbConfig);
    console.log('‚úÖ Base de donn√©es connect√©e');
    
    // V√©rifier les √©v√©nements
    const [events] = await connection.execute('SELECT id, title FROM events');
    console.log('üìÖ √âv√©nements:', events.length);
    events.forEach(e => console.log(`  - ID: ${e.id}, Titre: ${e.title}`));
    
    // V√©rifier les photos d'√©v√©nements
    const [photos] = await connection.execute('SELECT * FROM event_photos');
    console.log('üì∏ Photos d\'√©v√©nements:', photos.length);
    photos.forEach(p => console.log(`  - ID: ${p.id}, Event: ${p.event_id}, Fichier: ${p.filename}`));
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîí Connexion ferm√©e');
    }
  }
}

// Ex√©cuter la v√©rification
checkDatabase();